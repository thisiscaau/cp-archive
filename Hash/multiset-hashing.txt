// Amer and graphs codeforces
#include<bits/stdc++.h>
using namespace std;
#define ll long long
ll t,n;
ll pw1[5005],pw2[5005],idx[5005];
map<pair<ll,ll>,ll> g, cnt[5005];
const ll p1 = 1e9 + 7, p2 = 1e9 + 9;
const ll b1 = 304933, b2 = 4395853;
void solve(){
    mp.clear();
    cin >> n;
    for (int i = 0 ; i < n ; i++){
        cnt[i].clear();
        ll u,v;
        cin >> u >> v;
        if (u > v) swap(u,v);
        if (!g.count({u,v})) mp[{u,v}] = mp.size();
        idx[i] = mp[{u,v}];
    }
    ll res = 0;
    for (int i = 0 ; i < n ; i++){
        ll hash1 = 0, hash2 = 0;
        for (int j = i; j < n ; j++){
            hash1 += pw1[idx[j]]; hash1 %= p1;
            hash2 += pw2[idx[j]]; hash2 %= p2;
            ans += cnt[j-i][{hash1,hash2}];
            cnt[j-i][{hash1,hash2}]++;
        }
    }
    cout << res << endl;
}
signed main(){
    ios_base::sync_with_stdio(false);
    cin.tie(0);cout.tie(0);
    pw1[0] = pw2[0] = 1;
    for (int i = 1 ; i <= 5005 ; i++){
        pw1[i] = (pw1[i-1] * b1) % p1;
        pw2[i] = (pw2[i-1] * b2) % p2;
    }
    cin >> t;
    while (t--){
        solve();
    }
}